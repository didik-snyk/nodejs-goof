{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/NoRateLimitingForExpensiveWebOperation",
              "name": "NoRateLimitingForExpensiveWebOperation",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n## Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoRateLimitingForExpensiveWebOperation",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ministryofjustice/apvs-external-web/commit/0c9c9b33869909092d7cb442f10e76a08e4acb60?diff=split#diff-322f0482bd28fc40f84fcb0aaf208fef7fb63082d462cf02d11f46e59c531c24L-1",
                    "lines": [
                      {
                        "line": "// rate limiting\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (config.RATE_LIMITING_ENABLED === 'true') {\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "  app.enable('trust proxy')\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "  var limiter = new RateLimit({\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "    windowMs: parseInt(config.RATE_LIMITING_WINDOW_MILLISECONDS),\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "    max: parseInt(config.RATE_LIMITING_REQUEST_LIMIT),\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "    delayMs: 0, // disable delaying - full speed until the max limit is reached\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "    skip: function (req) {\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "      return req.url.startsWith('/public') // skip public assets\n",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 52,
                        "lineChange": "added"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "  //  apply to all requests\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "  app.use(limiter)\n",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "var packageJson = require('../package.json')\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "var developmentMode = app.get('env') === 'development'\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "var releaseVersion = packageJson.version\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "var serviceName = 'Get help with prison visits'\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'html')\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', path.join(__dirname, 'views'))\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "nunjucks(app, {\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "  watch: developmentMode,\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "  noCache: developmentMode\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/public', express.static(path.join(__dirname, 'public')))\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/public', express.static(path.join(__dirname, 'govuk_modules', 'govuk_template')))\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/public', express.static(path.join(__dirname, 'govuk_modules', 'govuk_frontend_toolkit')))\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(favicon(path.join(__dirname, 'govuk_modules', 'govuk_template', 'images', 'favicon.ico')))\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Basic auth\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (config.BASIC_AUTH_ENABLED === 'true') {\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "  app.use(function (req, res, next) {\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var credentials = auth(req)\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (req.url === '' || req.url === '/' || req.url === '/status') {\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "      next() // must leave root url free for Azure gateway\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if (!credentials ||\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        credentials.name !== config.BASIC_AUTH_USERNAME ||\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "        credentials.pass !== config.BASIC_AUTH_PASSWORD) {\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "        res.statusCode = 401\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "        res.setHeader('WWW-Authenticate', 'Basic realm=\"APVS External Web\"')\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "        res.end('Access denied')\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "      } else {\n",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "        next()\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "      }\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json())\n",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: false }))\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(expressSanitized())\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Send assetPath to all views.\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.locals.asset_path = '/public/'\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next()\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Add variables that are available in all views.\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.locals.serviceName = serviceName\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.locals.releaseVersion = 'v' + releaseVersion\n",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next()\n",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Set locale for translations.\n",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "i18n.configure({\n",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "  locales: ['en', 'cy'],\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "  directory: path.join(__dirname, '/locales'),\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "  updateFiles: config.I18N_UPDATEFILES || true\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(i18n.init)\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Log each HTML request and it's response.\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // Log response started.\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "  log.info({ request: req }, 'Route Started.')\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // Log response finished.\n",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "  onFinished(res, function () {\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.info({ response: res }, 'Route Complete.')\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next()\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Use cookie parser middleware (required for csurf)\n",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser(config.EXT_APPLICATION_SECRET, { httpOnly: true, secure: config.EXT_SECURE_COOKIE === 'true' }))\n",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Check for valid CSRF tokens on state-changing methods.\n",
                        "lineNumber": 137,
                        "lineChange": "none"
                      },
                      {
                        "line": "var csrfProtection = csurf({ cookie: { httpOnly: true, secure: config.EXT_SECURE_COOKIE === 'true' } })\n",
                        "lineNumber": 138,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 139,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 140,
                        "lineChange": "none"
                      },
                      {
                        "line": "  csrfExcludeRoutes.forEach(function (route) {\n",
                        "lineNumber": 141,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (req.originalUrl.includes(route) && req.method === 'POST') {\n",
                        "lineNumber": 142,
                        "lineChange": "none"
                      },
                      {
                        "line": "      next()\n",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {\n",
                        "lineNumber": 144,
                        "lineChange": "none"
                      },
                      {
                        "line": "      csrfProtection(req, res, next)\n",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 147,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Generate CSRF tokens to be sent in POST requests\n",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (req.hasOwnProperty('csrfToken')) {\n",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "    res.locals.csrfToken = req.csrfToken()\n",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next()\n",
                        "lineNumber": 155,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 156,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 157,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Build the router to route all HTTP requests and pass to the routes file for route configuration.\n",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "var router = express.Router()\n",
                        "lineNumber": 159,
                        "lineChange": "none"
                      },
                      {
                        "line": "routes(router)\n",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/', router)\n",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "// catch 404 and forward to error handler.\n",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var err = new Error('Not Found')\n",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "  err.status = 404\n",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.status(404)\n",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next(err)\n",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "// catch CSRF token errors\n",
                        "lineNumber": 171,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (err, req, res, next) {\n",
                        "lineNumber": 172,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SOSML/SOSML/commit/7e27f8b78d458f8ca8a4313730af19de6dc948a2?diff=split#diff-4e0d36557976efd053a8a93638c538d9c6530933aceca263867cd67b5ed9e5baL-1",
                    "lines": [
                      {
                        "line": "var callDockerLimiter = new RateLimit({\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "    windowMs: 10*60*1000, // 1 hour window\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    delayAfter: 10, // begin slowing down responses after the first 10 requests\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "    delayMs: 100, // slow down subsequent responses by 100 milliseconds per request\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    max: 50, // start blocking after 50 requests\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    message: \"Too many requests made from this IP, please try again in a few minutes\"\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "function evalSMLCode(payload, response) {\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    let dockerrunner = cmd.get(\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'docker run --cpus=1 --memory=128m --rm -i --read-only derjesko/mosmlfallback',\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "        function (err, data, stderr) {\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "            var last_line = data.split(/\\r?\\n/).pop();\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "            var error_code = parseInt(last_line.substring(2));\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "            error_text = '';\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if (error_code > 0) {\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "                if (error_code == 124) {\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    error_text = 'SML hit the time limit of 3 seconds.';\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "                } else {\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    data = data.replace(last_line, 'SML exited with ' + error_code);\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "                }\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "            data = data.replace(last_line, error_text);\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.set('Content-Type', 'text/plain');\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.end(data);\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    );\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    dockerrunner.stdin.write(payload);\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "    dockerrunner.stdin.destroy();\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "function readFile(name, callback) {\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fs.readFile(name, 'utf8', function (err, data) {\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (err) {\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return console.log(err);\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        callback(data);\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "function outputFile(name, response) {\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readFile(name, function (data) {\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.set('Content-Type', 'text/plain');\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.end(data);\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "function listDir(name, response) {\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fs.readdir(name, function (err, items) {\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.set('Content-Type', 'text/json');\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.end(JSON.stringify({codes: items}));\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.post('/api/fallback/',\n",
                        "lineNumber": 69,
                        "lineChange": "removed"
                      },
                      {
                        "line": "server.post('/api/fallback/', callDockerLimiter,\n",
                        "lineNumber": 78,
                        "lineChange": "added"
                      },
                      {
                        "line": "    function (request, response) {\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SOSML/SOSML/commit/7e27f8b78d458f8ca8a4313730af19de6dc948a2?diff=split#diff-4e0d36557976efd053a8a93638c538d9c6530933aceca263867cd67b5ed9e5baL-1",
                    "lines": [
                      {
                        "line": "var callDockerLimiter = new RateLimit({\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "    windowMs: 10*60*1000, // 1 hour window\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    delayAfter: 10, // begin slowing down responses after the first 10 requests\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "    delayMs: 100, // slow down subsequent responses by 100 milliseconds per request\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    max: 50, // start blocking after 50 requests\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    message: \"Too many requests made from this IP, please try again in a few minutes\"\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "function evalSMLCode(payload, response) {\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    let dockerrunner = cmd.get(\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'docker run --cpus=1 --memory=128m --rm -i --read-only derjesko/mosmlfallback',\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "        function (err, data, stderr) {\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "            var last_line = data.split(/\\r?\\n/).pop();\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "            var error_code = parseInt(last_line.substring(2));\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "            error_text = '';\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if (error_code > 0) {\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "                if (error_code == 124) {\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    error_text = 'SML hit the time limit of 3 seconds.';\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "                } else {\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    data = data.replace(last_line, 'SML exited with ' + error_code);\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "                }\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "            data = data.replace(last_line, error_text);\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.set('Content-Type', 'text/plain');\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.end(data);\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    );\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    dockerrunner.stdin.write(payload);\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "    dockerrunner.stdin.destroy();\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "function readFile(name, callback) {\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fs.readFile(name, 'utf8', function (err, data) {\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (err) {\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return console.log(err);\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        callback(data);\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "function outputFile(name, response) {\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readFile(name, function (data) {\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.set('Content-Type', 'text/plain');\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.end(data);\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "function listDir(name, response) {\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fs.readdir(name, function (err, items) {\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.set('Content-Type', 'text/json');\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.end(JSON.stringify({codes: items}));\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.post('/api/fallback/',\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "    function (request, response) {\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "        var payload = request.body.code;\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "        evalSMLCode(payload, response);\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": ");\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.post('/api/validate/',\n",
                        "lineNumber": 76,
                        "lineChange": "removed"
                      },
                      {
                        "line": "server.post('/api/validate/', callDockerLimiter,\n",
                        "lineNumber": 85,
                        "lineChange": "added"
                      },
                      {
                        "line": "    function (request, response) {\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-770"
                ]
              }
            },
            {
              "id": "javascript/NoHardcodedPasswords",
              "name": "NoHardcodedPasswords",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoHardcodedPasswords",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/MosheWorld/Teacher-Student-Backend/commit/8578b6d9666996ebbfeffc058b22ef076bb856ba?diff=split#diff-0d543c6db9caf085d6e9f704ed0a1ec6baf47092768cfcb746a3e42266d83672L-1",
                    "lines": [
                      {
                        "line": "user: 'studyhubemail@gmail.com',\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "pass: 'nuaheuvhpv'\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "user: process.env.EMAIL_USERNAME,\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "pass: process.env.EMAIL_PASSWORD\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/huluoyang/freecodecamp.cn/commit/277a09a3c3062263b61fb0bf02e17fd2be8ccb79?diff=split#diff-407d92ccd5a2b9275fe28f063fc49fbbedf9a87cfa6a1c3b8c72ce4b86858787L-1",
                    "lines": [
                      {
                        "line": "user: 'huluoyang@gmail.com',\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "pass: 'nopainnogain'\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "user: process.env.MANDRILL_USER || false,\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "pass: process.env.MANDRILL_PASSWORD\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tubackkhoa/tkframework/commit/0ac0f7964f71d71d3930e554cbaf928f39f4540f?diff=split#diff-ad73f37992e2c25b9ad0d945783289cbf65b92741918fabea31bfe5b9de96688L-1",
                    "lines": [
                      {
                        "line": "password: \"abc123ABC\",\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: process.env.DB_PASS,\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 44,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "javascript/WebCookieSecureDisabledByDefault",
              "name": "WebCookieSecureDisabledByDefault",
              "shortDescription": {
                "text": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nIn a session hijacking attack, if a cookie containing sensitive data is set without the `secure` attribute, an attacker might be able to intercept that cookie. Once the attacker has this information, they can potentially impersonate a user, accessing confidential data and performing actions that they would not normally be authorized to do. Attackers often gain access to this sensitive cookie data when it is transmitted insecurely in plain text over a standard HTTP session, rather than being encrypted and sent over an HTTPS session. This type of attack is highly preventable by following best practices when setting sensitive session cookies.\n\n## Best practices for prevention\n* Set the `secure` attribute in the response header when setting cookies on the client side, and use a test tool to verify that secure cookie transmission is in place.\n* Always use HTTPS for all login pages and never redirect from HTTP to HTTPS, which leaves secure session data open to interception.\n* Follow other best practices when it comes to session cookies, such as setting the HttpOnly flag and maintaining highly time-limited sessions.\n* Consider implementing browser checks and providing secure data only within a browser that supports tight cookie security.\n* Generate session IDs in a way that is not easily predictable, invalidate sessions upon logout, and never reuse session IDs.\n* Educate developers to use built-in secure session-management functionality within the development environment instead of taking a DIY approach.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "WebCookieSecureDisabledByDefault",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/xCss/bing/commit/49599704a5418f4c94ec046fdea597b2e86abad7?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "cookie: {\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    secure: true,\r\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OpenUserJS/OpenUserJS.org/commit/e9b369ad2dbe93849b85639e1466b12ee6263544?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "cookie: {\n",
                        "lineNumber": 319,
                        "lineChange": "none"
                      },
                      {
                        "line": "  maxAge: 5 * 60 * 1000 // minutes in ms NOTE: Expanded after successful auth\n",
                        "lineNumber": 320,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  maxAge: 5 * 60 * 1000, // minutes in ms NOTE: Expanded after successful auth\n",
                        "lineNumber": 320,
                        "lineChange": "added"
                      },
                      {
                        "line": "  secure: (isPro && secured ? true : false)\n",
                        "lineNumber": 321,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/feinwarusoftware/awesomobot/commit/d17a3ad13a2af300d4d3bf4e749338f04fabf27b?diff=split#diff-fc0fe0dc00ac98d54cb1ee462b826ea1ef890fa58683f06c71972fd1c1744355L-1",
                    "lines": [
                      {
                        "line": "res.cookie(\"session\", jwt.sign({ id: new_session_doc._id }, config.jwt_secret), config.rawrxd, { maxAge: 604800, expire: new Date() + 604800, secure: true });\n",
                        "lineNumber": 223,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.cookie(\"session\", jwt.sign({ id: new_session_doc._id }, config.jwt_secret), { maxAge: 60000, httpOnly: true, secure: true, signed: true });\n",
                        "lineNumber": 223,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 17,
                "cwe": [
                  "CWE-614"
                ]
              }
            },
            {
              "id": "javascript/HttpToHttps",
              "name": "HttpToHttps",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n## Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HttpToHttps",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/medic/couch2pg/commit/062eaa0f53d2cd2327232a695c60bf4c9fd589f6?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "var httplib = require('http');\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var httplib = require('https');\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dondi/GRNsight/commit/01e7d39d55ea9c18348a48aac5954183d825e834?diff=split#diff-65890f102baa526da3cc5d65e0528ea728fa9fa63659a7f2e1d523686240359cL-1",
                    "lines": [
                      {
                        "line": "var https = require(\"http\");\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var https = require(\"https\");\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/watilde/npmbrew/commit/968a0cd04e732ede4552e60e86762ce77f7f0a5c?diff=split#diff-94469ba7812da76fe341041375403897426443f146321489331bb46bb45faf5bL-1",
                    "lines": [
                      {
                        "line": "var http = require(\"http\")\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var http = require(\"https\")\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 4,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "javascript/NoSqli",
              "name": "NoSqli",
              "shortDescription": {
                "text": "NoSQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nIn an NoSQL injection attack, the user can submit an NoSQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoSqli",
                  "Security",
                  "SourceServer",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/txwkx/book-room/commit/07d49f6d24577b1cc1f7374cd8156aba894ab481?diff=split#diff-386f21d62bc9118d346e66a9ea781c22cb0570a51656f80313d829b3a47eaeefL-1",
                    "lines": [
                      {
                        "line": "const mongoose = require('mongoose');\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//Model\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const roomSchema = new mongoose.Schema({ name: String, title: String });\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const Room = mongoose.model('Room', roomSchema);\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const mongoose = require('mongoose'),\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "      ObjectId = mongoose.Types.ObjectId;\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "const room = require('./models/roomModel');\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "const roomRouter = express.Router();\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "roomRouter.get('/', (req, res) => {\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    let query = {};\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Room.find(query, (err, rooms) => {\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if(err) res.status(500).send(err);\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "      else res.json(rooms);\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "roomRouter.get('/:id', (req, res) => {\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Room.findById(req.params.id, (err, room) => {\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const roomId = ObjectId(req.params.id);\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "    room.findById(roomId, (err, room) => {\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dnbard/brackets-extension-rating/commit/5005713d903d0f72e9166c852114ee2731b832b1?diff=split#diff-47f1ac8221ebff697d20f61a182c8c58ae0cfdb152ce1fa2f74e322f451d4ae6L-1",
                    "lines": [
                      {
                        "line": "    Extension.findOne({_id: id}, function(err, extension){\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        if (err){\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            res.status(500).send(err);\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        } else if (!extension){\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            res.status(404).send(extension);\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        } else {\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (typeof id !== 'string'){\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "        res.status(422).send();\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return;\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (!registry){\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "        res.status(500).send('Registry is not available');\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return;\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "    extension = _.filter(registry, function(el){\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return el._id === id;\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (extension){\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/lydiahallie/CodeBuddy/commit/833bc261d0ea3d8bc879aef9e56819907523eef0?diff=split#diff-7b34d6d0aa663ac1e8442aee4f25c59ced93612f5b90c5fe6279ad48c7df1001L-1",
                    "lines": [
                      {
                        "line": "const author = await User.findOne({ _id: currentUser._id });\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const recipient = await User.findOne({ _id: user._id });\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const author = await User.findOne({ _id: req.user._id });\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "const recipient = await User.findOne({ _id: id });\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 9,
                "cwe": [
                  "CWE-943"
                ]
              }
            },
            {
              "id": "javascript/NoHardcodedPasswords/test",
              "name": "NoHardcodedPasswords/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoHardcodedPasswords",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/MosheWorld/Teacher-Student-Backend/commit/8578b6d9666996ebbfeffc058b22ef076bb856ba?diff=split#diff-0d543c6db9caf085d6e9f704ed0a1ec6baf47092768cfcb746a3e42266d83672L-1",
                    "lines": [
                      {
                        "line": "user: 'studyhubemail@gmail.com',\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "pass: 'nuaheuvhpv'\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "user: process.env.EMAIL_USERNAME,\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "pass: process.env.EMAIL_PASSWORD\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/huluoyang/freecodecamp.cn/commit/277a09a3c3062263b61fb0bf02e17fd2be8ccb79?diff=split#diff-407d92ccd5a2b9275fe28f063fc49fbbedf9a87cfa6a1c3b8c72ce4b86858787L-1",
                    "lines": [
                      {
                        "line": "user: 'huluoyang@gmail.com',\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "pass: 'nopainnogain'\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "user: process.env.MANDRILL_USER || false,\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "pass: process.env.MANDRILL_PASSWORD\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tubackkhoa/tkframework/commit/0ac0f7964f71d71d3930e554cbaf928f39f4540f?diff=split#diff-ad73f37992e2c25b9ad0d945783289cbf65b92741918fabea31bfe5b9de96688L-1",
                    "lines": [
                      {
                        "line": "password: \"abc123ABC\",\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: process.env.DB_PASS,\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 44,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "javascript/DisablePoweredBy",
              "name": "DisablePoweredBy",
              "shortDescription": {
                "text": "Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n## Best practices for prevention\n- Encrypt data at all times, whether in transit or at rest.\n- When transporting data, always use a secure protocol such as TLS.\n- Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n- Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n- Ensure that caching is disabled for all transactions involving sensitive information.\n- Store passwords with secure, salted hashing functions.\n- Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "DisablePoweredBy",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/nunux-keeper/keeper-core-api/commit/3717e4c4d2f732ceb7d3ee521782c979ca2a141c?diff=split#diff-c72a907ac323cd2f334ed0e2bd07d15ab62581c4753660c8a0d1c681b30be4b6L-1",
                    "lines": [
                      {
                        "line": "const app = express();\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Set properties\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('port', process.env.APP_PORT || 3000);\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('realm', process.env.APP_REALM || 'http://localhost:' + app.get('port'));\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('info', {\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "  name: appInfo.name,\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "  description: appInfo.description,\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  version: appInfo.version,\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "  realm: app.get('realm'),\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  env: env\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Disable some properties\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.disable('x-powered-by');\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/GoogleChromeLabs/gulliver/commit/e3e61eb3aa66bf9c801dc79318d585ef76b2df6c?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "const helmet = require('helmet');\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "const helpers = require('./views/helpers');\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = express();\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "const bodyParser = require('body-parser');\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "const serveStatic = require('serve-static');\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(helmet());\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/adeperio/base/commit/bee34a30b82cf3d8c0812b92907a5a15cdf0ac93?diff=split#diff-f85e295b34c9835cd9f4b308ba1deea8fc648cb706ae7d4e198cf3585051dee1L-1",
                    "lines": [
                      {
                        "line": "// import helmet from 'helmet';\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// import express_enforces_ssl from 'express-enforces-ssl';\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import helmet from 'helmet';\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "import express_enforces_ssl from 'express-enforces-ssl';\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "import signInRoutes from './routes/sign-in-routes.js';\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "import signOutRoutes from './routes/sign-out-routes.js';\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "import signUpRoutes from './routes/sign-up-routes.js';\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "import userRoutes from './routes/user-routes.js';\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "import passport from './middleware/passport.js';\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "var server = express();\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "// ======== *** VIEWS AND TEMPLATES ***\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "//Set port\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.set('port', (process.env.PORT || 5000));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.set('views', path.join(__dirname, 'templates'));\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.set('view engine', 'jade');\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "//Setup location to static assets\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use(express.static(path.join(__dirname)));\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "// ======== *** SECURITY MIDDLEWARE ***\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "//setup helmet js\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "// server.use(helmet());\n",
                        "lineNumber": 38,
                        "lineChange": "removed"
                      },
                      {
                        "line": "server.use(helmet());\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 416,
                "cwe": [
                  "CWE-200"
                ]
              }
            },
            {
              "id": "javascript/OR",
              "name": "OR",
              "shortDescription": {
                "text": "Open Redirect"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nAn open redirect attack takes place when a web application redirects the user to an unauthorized and untrusted site. In general, URL redirection refers to the ability of a website or application to redirect users to another site. This is often a benign and useful feature. For example, if a resource has moved to a new location, URL redirection can transfer the user to that location rather than displaying an error message.\nHowever, this ability can be exploited through social engineering, tricking the user into believing they are accessing one site when, in reality, they are being redirected to a dangerous site, such as a phishing site. Once there, the user may be further tricked into entering credentials or personally identifiable information (PII), believing they are still within the original, trusted domain. Attackers can then use these credentials to gain unauthorized access or leverage the user's PII for sale or ransom.\n\n## Best practices for prevention\n* When developing a site or web app, consider implementing a disclaimer page to remind users that they are leaving a secure site.\n* Adopt a zero-trust approach in which all input is treated with suspicion.\n* Validate all input against deny-lists to ensure it does not contain code to redirect the user. This method is good but inherently incomplete.\n* Be aware of all sources of untrusted input being sent to the server that could be used to redirect the user, such as cookies, URL components, filenames, query results, request headers, and more.\n* In particular, be aware of potential API calls that could send input indirectly to redirect the user.\n* To protect end users, use a firewall to block known malicious sites, train users to recognize basic signs of a phishing attack, and ensure that all network endpoints are patched with the most current updates.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "OR",
                  "Security",
                  "SourceServer",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Midburn/spark/commit/a4ed80954090d9869d7e384e8b23567642b25fa8?diff=split#diff-d995cd46019e674b6792d7cc828b99307a9c05ce2f862e2f417e3eccea8a9707L-1",
                    "lines": [
                      {
                        "line": "if (r) {\n",
                        "lineNumber": 97,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (r && constants.LOGIN_REDIRECT_URL_WHITELIST.indexOf(r) > 0) {\n",
                        "lineNumber": 97,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return res.redirect(r);\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/abecms/abecms/commit/ce5de4c76656095fc55e4346b10966350dfe30c5?diff=split#diff-cac8d76de9445b06859ce7116847aea1f2b7543cd26ab7789f6c3186e7c6b280L-1",
                    "lines": [
                      {
                        "line": "          if(result.success === 1) window.location.href = reloadUrl;\n",
                        "lineNumber": 133,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 133,
                        "lineChange": "added"
                      },
                      {
                        "line": "          if(result.success === 1) location.reload()\n",
                        "lineNumber": 134,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dai-shi/social-cms-backend/commit/d994642d8df010d5a7ccfc6c792d59680db3fce6?diff=split#diff-c3e3cf741f47f4530ca839627d1049c4f8c8d1539f6d1190dd9b5649f81f2b2bL-1",
                    "lines": [
                      {
                        "line": "res.redirect(req.body.success_redirect);\n",
                        "lineNumber": 133,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.json({\n",
                        "lineNumber": 137,
                        "lineChange": "added"
                      },
                      {
                        "line": "  _id: null\n",
                        "lineNumber": 138,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 139,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 69,
                "cwe": [
                  "CWE-601"
                ]
              }
            },
            {
              "id": "javascript/NoHardcodedCredentials",
              "name": "NoHardcodedCredentials",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoHardcodedCredentials",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/thallium205/BitcoinVisualizer/commit/3fd03f5ec7236a0602ea2960dc786b156601efc6?diff=split#diff-a0f6e6d9c44dcd75d4a33b841594a196ff2e74137919f62ac68935a991378528L-1",
                    "lines": [
                      {
                        "line": "host     : '10.0.0.1',\r\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "user     : 'root',\r\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password : 'webster',\r\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "database : 'blockviewer'\r\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "host     : process.env.sqlhost,\r\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "user     : process.env.sqluser,\r\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "password : process.env.sqlpass,\r\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "database : process.env.sqldatabase\r\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/azukiapp/azk/commit/f032902cd00ad2ed6dfb8d9f7d9f31e9db10b210?diff=split#diff-14c376258425dc4f37d3c24807f4b5ba8b060f4dd75d5e90f8d88396acacbf3bL-1",
                    "lines": [
                      {
                        "line": "username: 'docker',\n",
                        "lineNumber": 298,
                        "lineChange": "removed"
                      },
                      {
                        "line": "username: azk.cst.VM_USER,\n",
                        "lineNumber": 298,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jedireza/aqua/commit/5c35c79f56ada04f4d2c565954ccf63f55b1f706?diff=split#diff-c85bcf94d1b915dac9d6da178bf7648fa1a910cbcdc14a82fef8a90cf9f62e21L-1",
                    "lines": [
                      {
                        "line": "password : 'test',\n",
                        "lineNumber": 203,
                        "lineChange": "removed"
                      },
                      {
                        "line": "email : 'test@test.com'\n",
                        "lineNumber": 204,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password : results.rootPassword,\n",
                        "lineNumber": 203,
                        "lineChange": "added"
                      },
                      {
                        "line": "email : results.rootEmail\n",
                        "lineNumber": 204,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 30,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "javascript/UseCsurfForExpress",
              "name": "UseCsurfForExpress",
              "shortDescription": {
                "text": "Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nCross-site request forgery is an attack in which a malicious third party takes advantage of a user's authenticated credentials (such as a browser cookie) to impersonate that trusted user and perform unauthorized actions. The web application server cannot tell the difference between legitimate and malicious requests. This type of attack generally begins by tricking the user with a social engineering attack, such as a link or popup that the user inadvertently clicks, causing an unauthorized request to be sent to the web server. Consequences vary: At a standard user level, attackers can change passwords, transfer funds, make purchases, or connect with contacts; from an administrator account, attackers can then make changes to or even take down the app itself.\n\n## Best practices for prevention\n* Use development frameworks that defend against CSRF, using a nonce, hash, or some other security device to the URL and/or to forms.\n* Implement secure, unique, hidden tokens that are checked by the server each time to validate state-change requests.\n* Never assume that authentication tokens and session identifiers mean a request is legitimate.\n* Understand and implement other safe-cookie techniques, such as double submit cookies.\n* Terminate user sessions when not in use, including automatic timeout.\n* Ensure rigorous coding practices and defenses against other commonly exploited CWEs, since cross-site scripting (XSS), for example, can be used to bypass defenses against CSRF.\n\n## References\n\n* [Express Documentation - Implement CSRF Protection](https://expressjs.com/en/resources/middleware/csurf.html)\n* [Node Security Checklist - CSRF](https://blog.risingstack.com/node-js-security-checklist/#csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "UseCsurfForExpress",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/xiaoshan5733/cms/commit/cfa979899ffc5d7a1305571923ba6ae70548675b?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "var app = express();\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "//连接数据库\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.connect(config.mongodb.uri);\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "var db = mongoose.connection;\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "db.on('error', console.error.bind(console, 'connection error:'));\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "db.once('open', function callback () {\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  console.log('连接mongodb成功');\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "//引入数据模型\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "util.walk(appPath + '/server/models', null, function(path) {\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    require(path);\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "// view engine setup\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', path.join(__dirname, 'views'));\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'jade');\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "//定义全局字段\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.locals = {\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    title: 'CMS',\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    pretty: true,\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "    moment: moment,\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    _: underscore,\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    util: util,\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    config: config,\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    adminDir: config.admin.dir ? ('/' + config.admin.dir) : ''\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "};\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('config', config);\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(favicon());\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(logger('dev'));\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json());\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded());\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser());\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(session({\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    secret: 'ruoguan'/*,\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    store: new RedisStore*/\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "}));\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "//app.use(csrf());\n",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.use(csrf());\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Detry322/redisred/commit/57aeed9563c1020ca70093310634000d795ae3b4?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "var csrf = require('csurf');\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "//Initialize auth\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "authentication(passport, adminUsername, adminPassword);\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "//Initialize the app\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "var app = express();\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', './views');\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'jade');\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(favicon('./public/assets/favicon.png'));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: false }));\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(expressSession({ secret: sessionSecret, resave: true, saveUninitialized: true }));\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(passport.initialize());\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(passport.session());\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(csrf());\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/slidewiki/slidewiki-platform/commit/3e1fd3ff647826a1321f4272924da9bfbcc91383?diff=split#diff-a4c65ede64197e1a112899a68bf994485b889c4b143198bac4af53425b38406fL-1",
                    "lines": [
                      {
                        "line": "import cookieParser from 'cookie-parser';\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "import csrf from 'csurf';\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "import compression from 'compression';\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "import debugLib from 'debug';\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "import path from 'path';\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "import serialize from 'serialize-javascript';\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "import {navigateAction} from 'fluxible-router';\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "import debugLib from 'debug';\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "import React from 'react';\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "import ReactDOM from 'react-dom/server';\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "import app from './app';\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "import HTMLComponent from './components/DefaultHTMLLayout';\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "import { createElementWithContext } from 'fluxible-addons-react';\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "import favicon from 'serve-favicon';\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "const env = process.env.NODE_ENV;\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "const debug = debugLib('slidewiki-platform');\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "const server = express();\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use(favicon(path.join(__dirname, '/favicon.ico')));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use('/public', express['static'](path.join(__dirname, '/build')));\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use('/bower_components', express['static'](path.join(__dirname, '/bower_components')));\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use('/custom_modules', express['static'](path.join(__dirname, '/custom_modules')));\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use('/assets', express['static'](path.join(__dirname, '/assets')));\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use(compression());\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use(bodyParser.json());\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use(csrf({cookie: true}));\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 66,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "javascript/HardcodedNonCryptoSecret",
              "name": "HardcodedNonCryptoSecret",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HardcodedNonCryptoSecret",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/DanielMil/Authentication-Server/commit/310ce5500e9e751ee2fd9f3018bf772e9aae8364?diff=split#diff-dcdc3e0b3362edb8fec2a51d3fa51f8fb8af8f70247e06d9887fa934834c9122L-1",
                    "lines": [
                      {
                        "line": "// Set environment variables\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "const sessionSecret: any = process.env.SESSION_SECRET;\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "const dbConnection: any = process.env.MONGO_URI; \n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "// Mongo config\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "const DB_CONNECTION: any = process.env.MONGO_URI; \n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.connect(DB_CONNECTION, { useNewUrlParser: true })\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": " .then(() => console.log(\"Succesfully connected to MongoDB.\"))\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": " .catch((err: mongoose.Error) => console.error(err));\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "const MongoStore = mongoStore(session); \n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "const db: any  = mongoose.connection;\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": " \n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Fix mongo deprecation warnings\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.set('useNewUrlParser', true);\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.set('useFindAndModify', false);\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.set('useCreateIndex', true);\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Configure express session\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser());\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(session({\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    secret: \"secret\",\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    secret: sessionSecret,\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/virena-app/virena/commit/8058527e8ef71bfa81f0cb0fb35eb80d00e08fdb?diff=split#diff-186488e26aa960d29fec244ac086f15e024c5a84df47eeba233d9b8d2525de2dL-1",
                    "lines": [
                      {
                        "line": "client_id: '8fcf3e5c2d3d5dd78188',\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "client_secret: '0e102c56021e1aa28005b469b3c83ef7cb7e5b0e'\n",
                        "lineNumber": 37,
                        "lineChange": "removed"
                      },
                      {
                        "line": "client_id: process.env.GITINIT,\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "client_secret: process.env.GITSEE\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nemtech/nem2-library-js/commit/dd101718759035849eeb9d4a388656acdb5bf6d9?diff=split#diff-59ccc41578f07869060f7aea9ceca193a407696cce3de9f7219f98187f65c5b7L-1",
                    "lines": [
                      {
                        "line": "const hash = sha3_512.create();\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "hash.update('secret');\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const hash = new Ripemd160().update(Buffer.from('Test Hash 160')).digest('Hex');\t\t\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "const secretLockTransaction = {\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tdeadline: deadline(),\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tmosaicId: [3646934825, 3576016193],\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tmosaicAmount: uint64.fromUint(10000000),\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tduration: uint64.fromUint(100),\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\thashAlgorithm: 0,\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tsecret: '225fe6d12b73a7d51f2992ce82951dbf8c173fa4',\n",
                        "lineNumber": 37,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\thashAlgorithm: HashAlgorithm.RIPEMD_160,\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tsecret: hash,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-547"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 73,
                  "startColumn": 17,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "deaa65f8905ea27db40e9520e38b546e8d6f420bf689cd8f6565a18a9b71e49d",
            "1": "ae77ea27.4773f344.607187b5.c559ebce.e8c4f0e7.5fce695c.83265159.89d75565.ae77ea27.4773f344.607187b5.c559ebce.e8c4f0e7.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 73,
                            "startColumn": 17,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 80,
                  "startColumn": 17,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0b3106c9ce55d4ffd3afe2643805271fdae09c28e5e344022ce2fa9ef31ddb0f",
            "1": "1b97e34f.4773f344.b7ecf34b.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.1b97e34f.4773f344.b7ecf34b.c559ebce.fd1fa73f.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 80,
                            "startColumn": 17,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 87,
                  "startColumn": 31,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "32b7daba719f6c158533c93b8745022ed1acd597537d5595594dfbb98ea02589",
            "1": "ae77ea27.4773f344.8b18f948.c559ebce.69933721.5fce695c.83265159.89d75565.ae77ea27.4773f344.8b18f948.c559ebce.69933721.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 87,
                            "startColumn": 31,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 113,
                  "startColumn": 32,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "946646546f6c9b27fc3e5a8ade476af08d244fe68fe3315994f120269fb51d65",
            "1": "ae77ea27.9c6e2949.6bb8eed2.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.ae77ea27.4773f344.6bb8eed2.c559ebce.5db1563f.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 113,
                            "startColumn": 32,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 241,
                  "endLine": 296,
                  "startColumn": 18,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "81b799790c8010b8134f7d9376014e496a8616d6b8eb87e155781df27419c60e",
            "1": "ae77ea27.9c6e2949.98501263.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.c3f8dfad.4773f344.1ec824b2.c559ebce.546471fb.5fce695c.83265159.2f05c567"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 296,
                            "startColumn": 18,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 298,
                  "endLine": 306,
                  "startColumn": 21,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7027e293ec9264ae98b1c1b6182c6e740ce58355f39d8ee9adad329f7d97ec8b",
            "1": "ae77ea27.4773f344.607187b5.1c17f46e.93e94ad5.5fce695c.83265159.89d75565.ae77ea27.4773f344.607187b5.1c17f46e.93e94ad5.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 306,
                            "startColumn": 21,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a system command execution and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a system command execution](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 152,
                  "endLine": 188,
                  "startColumn": 18,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0d61c66c3135e5a7995ac71c65afbb8110287948ec6e5fc22e40b39264cbd244",
            "1": "a3c051e6.9c6e2949.98501263.c559ebce.b5c66366.5fce695c.83265159.89d75565.a3c051e6.4773f344.c2905f73.c559ebce.b6be8b13.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 188,
                            "startColumn": 18,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mongoose-db.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "startColumn": 43,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bb47b7d48852e26400b10ea5fd18a79dda541ca243f28818319392ef255ca0c1",
            "1": "12567ef6.6d936dbf.bd65d204.fd94bb7c.79a7d027.fcf3002d.81d021f5.91c60b7d.12567ef6.6d936dbf.bd65d204.fd94bb7c.79a7d027.fcf3002d.81d021f5.91c60b7d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "mongoose-db.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 509,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in typeorm.createConnection.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[typeorm.createConnection](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "typeorm-db.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "startColumn": 3,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "714f86014c4086a83e6ec5960f6b9e15a6bcbc65618ec26be52f928c28e1e54e",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2036d596.0d9a312e.4773f344.bd65d204.93494013.79a7d027.34a4d81a.3cc2afb5.7a8e32e9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "typeorm-db.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 1,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 559,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/WebCookieSecureDisabledByDefault",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "Cookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
            "markdown": "{0} misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
            "arguments": [
              "[Cookie](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 3,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1149b3ac40e73cfe7c2612def2d5fb4f5daf79f943978c91a9caf0269a385a52",
            "1": "12567ef6.4773f344.126beb45.e052b9a9.79a7d027.fcf3002d.4d89694d.f5919d50.fc3065be.4773f344.44eded10.d7919eeb.79a7d027.5fce695c.df7e59ba.f5919d50"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HttpToHttps",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.createServer](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "startColumn": 1,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8549d8d8c5c693e9e2031acf3d65b1a8dca4880f8e24e4557b18250e63c61729",
            "1": "aac70831.4773f344.607187b5.9a6c48e6.2fce9a75.6f0d36d4.a4e722aa.b1b5c7cb.7a85a498.4773f344.d685e3e1.d7919eeb.8b312d3d.5fce695c.ea1fda40.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 1,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into find, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4)",
              "[find](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5dacd021007d5479cb1b35404420a56a7fc14480d99c3f62ac16a87ad2bfe1ed",
            "1": "12567ef6.4773f344.7fde84c3.750eb3ec.cea4e9be.8020cfdf.cd61fc56.3cd69235.f759b1f9.4773f344.7fde84c3.08906714.3ee7338e.5fce695c.c0a0d45c.1ce8e212"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 25,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 15,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 813,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into findById, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[findById](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 191,
                  "endLine": 191,
                  "startColumn": 8,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f29998dd1d33bdbf1317d01081877199b63775e8fc8c6ce3f68efdbd30302fc1",
            "1": "d6cf995b.7f46b8bf.607187b5.f2573d69.ef9f7d82.f8890b3c.cd61fc56.7354dc7a.1e99c45f.7f46b8bf.7c3fa097.f2573d69.6f7f4efa.5fce695c.c0a0d45c.1ce8e212"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 17,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 813,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into findById, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[findById](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 219,
                  "endLine": 219,
                  "startColumn": 8,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b9418b6be9e039103623c676011d82561ad64bb4245d2ef207762c7f097df7eb",
            "1": "d6cf995b.7f46b8bf.607187b5.f2573d69.ef9f7d82.f8890b3c.cd61fc56.7354dc7a.1e99c45f.7f46b8bf.7c3fa097.f2573d69.6f7f4efa.5fce695c.c0a0d45c.1ce8e212"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 17,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 219,
                            "endLine": 219,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 813,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in changePassword.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[changePassword](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/authentication.component.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "startColumn": 12,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f872652a1efd77a0131906f9304901d81685660255b5b87185344a7782ac7e4",
            "1": "d4a219e8.45cfe696.bd65d204.a517c54b.ef9f7d82.bd719ca7.6977003a.aad72eb6.43e940cd.4773f344.bd65d204.0de66e91.ef9f7d82.47912b0b.c8832359.aad72eb6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/authentication.component.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in changePassword.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[changePassword](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/authentication.component.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "startColumn": 28,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f872652a1efd77a0131906f9304901d81685660255b5b87185344a7782ac7e4",
            "1": "43e940cd.45cfe696.f0420b1d.0de66e91.ef9f7d82.bd719ca7.692e8c37.aad72eb6.43e940cd.4773f344.bd65d204.0de66e91.ef9f7d82.47912b0b.c8832359.aad72eb6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/authentication.component.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in changePassword.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[changePassword](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/authentication.component.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 48,
                  "startColumn": 12,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "452a522d40c16de2ebd3b56235eb1efaddcaa6ddcf09da513c965d522c4d13bc",
            "1": "d4a219e8.45cfe696.bd65d204.a517c54b.ef9f7d82.bd719ca7.6977003a.aad72eb6.2bfff803.4773f344.bd65d204.0de66e91.5bcab2b0.47912b0b.c8832359.3b5775a7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/authentication.component.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in changePassword.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[changePassword](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/authentication.component.spec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 48,
                  "startColumn": 28,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "452a522d40c16de2ebd3b56235eb1efaddcaa6ddcf09da513c965d522c4d13bc",
            "1": "43e940cd.45cfe696.f0420b1d.0de66e91.ef9f7d82.bd719ca7.692e8c37.aad72eb6.2bfff803.4773f344.bd65d204.0de66e91.5bcab2b0.47912b0b.c8832359.3b5775a7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/authentication.component.spec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 417,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/DisablePoweredBy",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "markdown": "Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 28,
                  "startColumn": 11,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ba401cc8208720acf3341d4840060ae653e0a179f636e3e31163f9c57d749503",
            "1": "ae77ea27.4773f344.607187b5.d7919eeb.a1fb1152.5fce695c.fee35010.89d75565.630e4ed1.4773f344.aa4dda5f.d7919eeb.f30fb760.49b28873.85bdc101.83642794"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/OR",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[redirect](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "startColumn": 18,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1772dfcbd0355b156b265344af281f40e82f6933db41d9af26b1f1595660469a",
            "1": "3900f8ff.4773f344.1ec824b2.9cb80fc2.ef9f7d82.8020cfdf.83265159.355f69ac.f759b1f9.4773f344.1ec824b2.08906714.ef9f7d82.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 34,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 28,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 27,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in typeorm.createConnection.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[typeorm.createConnection](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "typeorm-db.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 3,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4b7c3803820ba34684e825a2b41eff46f61fb0395fd6edba254171183b51c31c",
            "1": "12567ef6.4773f344.5db24211.e052b9a9.79a7d027.fcf3002d.ce4a9d89.5eeba349.0d9a312e.4773f344.bd65d204.93494013.79a7d027.34a4d81a.3cc2afb5.7a8e32e9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "typeorm-db.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 1,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/UseCsurfForExpress",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "CSRF protection is disabled for your Express app. This allows the attackers to execute requests on a user's behalf.",
            "markdown": "CSRF protection is disabled for your {0}. This allows the attackers to execute requests on a user's behalf.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 28,
                  "startColumn": 11,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dcca7a5914f3491c12eb8783a6ff16b7a9c156d49a93867cfc700680f29cc731",
            "1": "ae77ea27.4773f344.607187b5.d7919eeb.a1fb1152.5fce695c.fee35010.89d75565.630e4ed1.4773f344.aa4dda5f.d7919eeb.f30fb760.49b28873.85bdc101.83642794"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in express-session.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[express-session](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 9,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "260c5be6525ea2ff697cf1389e59aae276a6ab5b8fda6d27e2e2b82b7b89c111",
            "1": "fc3065be.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.a56a8b5b.4a974edb.fc3065be.4773f344.44eded10.d7919eeb.79a7d027.5fce695c.48237d02.f5919d50"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 11,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 809,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 5,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a5e1e90f016405b994489f8ca086788c3cfd8d286b1b264cfab1a20e4b1fb98d",
            "1": "46b7c801.8e456e36.642d3d87.72a8f743.a46de81d.5fce695c.fee35010.89d75565.46b7c801.8e456e36.642d3d87.72a8f743.a46de81d.5fce695c.fee35010.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 13,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 5,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 809,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "EJS",
            "files": 4,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 10,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 1,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}
